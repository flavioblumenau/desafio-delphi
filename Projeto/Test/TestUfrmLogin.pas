unit TestUfrmLogin;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Vcl.Buttons, FireDAC.DApt.Intf, FireDAC.DatS, FireDAC.Stan.Param,
  System.Classes, Vcl.ExtCtrls, Vcl.StdCtrls, FireDAC.Stan.Intf, FireDAC.Stan.Error,
  Vcl.Graphics, FireDAC.Phys.Intf, FireDAC.Comp.Client, Vcl.DBCtrls, Winapi.Windows,
  System.Variants, Winapi.Messages, Vcl.Dialogs, FireDAC.Stan.Async, FireDAC.DApt,
  Vcl.Forms, System.SysUtils, Data.DB, Vcl.Controls, FireDAC.Stan.Option,
  FireDAC.Comp.DataSet, UfrmLogin;

type
  // Test methods for class TfrmLogin

  TestTfrmLogin = class(TTestCase)
  strict private
    FfrmLogin: TfrmLogin;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestloginInValido;
    procedure TestloginValido;
  end;

implementation

uses uDM;

procedure TestTfrmLogin.SetUp;
begin
  Application.CreateForm(TDM, DM);
  Application.CreateForm(TFrmLogin, FrmLogin);
end;

procedure TestTfrmLogin.TearDown;
begin
  FfrmLogin.Free;
  FfrmLogin := nil;
  FreeAndNil(DM);
end;

procedure TestTfrmLogin.TestloginValido;
var
  ReturnValue: Boolean;
  senha: string;
  usuario: string;
begin
  SetUp;
  usuario :='ADMIN';
  senha:='123';
  ReturnValue := FfrmLogin.loginValido(usuario, senha);
  Assert(ReturnValue,'Login Inválido');
end;

procedure TestTfrmLogin.TestloginInValido;
var
  ReturnValue: Boolean;
  senha: string;
  usuario: string;
begin
  SetUp;
  usuario :='or 1=1';
  senha:='or 1=1';
  ReturnValue := FfrmLogin.loginValido(usuario, senha);
  Assert(ReturnValue,'Login Inválido');

end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTfrmLogin.Suite);
end.

